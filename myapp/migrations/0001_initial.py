# Generated by Django 5.1.1 on 2024-09-21 05:47

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('Name', models.CharField(max_length=50)),
                ('Mob', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('Email', models.EmailField(max_length=254)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('avtar', models.ImageField(default='avtar/avtar.png', upload_to='avtar/')),
            ],
        ),
        migrations.CreateModel(
            name='Pond',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('latlong', models.CharField(max_length=50)),
                ('location', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326, unique=True)),
                ('area', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=50)),
                ('telegram_group_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('Name', models.CharField(max_length=50)),
                ('Mob', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('Email', models.EmailField(max_length=254)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('adhaar', models.CharField(blank=True, max_length=16, null=True)),
                ('reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('avtar', models.ImageField(blank=True, null=True, upload_to='avtar/')),
                ('user_category', models.CharField(choices=[('3d', '3d'), ('analytics', 'analytics'), ('aqua', 'aqua'), ('water', 'water')], default=(('3d', '3d'), ('analytics', 'analytics'), ('aqua', 'aqua'), ('water', 'water')), max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pH', models.FloatField()),
                ('dissolved_oxygen', models.FloatField()),
                ('NDVI', models.FloatField()),
                ('NDTI', models.FloatField()),
                ('GCI', models.FloatField()),
                ('NDCI', models.FloatField()),
                ('NDWI', models.FloatField()),
                ('TSS', models.FloatField()),
                ('CDOM', models.FloatField()),
                ('AQUATIC_MACROPYTES', models.FloatField()),
                ('Phycocyanin', models.FloatField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('pond', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.pond')),
            ],
        ),
        migrations.CreateModel(
            name='ServicePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100, verbose_name='User Name')),
                ('service_name', models.CharField(max_length=50, null=True, verbose_name='Service Name')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Order Id')),
                ('token', models.CharField(blank=True, max_length=200, null=True, verbose_name='Token')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pond_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.pond')),
            ],
        ),
        migrations.AddField(
            model_name='pond',
            name='registration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user'),
        ),
        migrations.CreateModel(
            name='Worker_details',
            fields=[
                ('mobno', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('user', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option1', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], default='yes', max_length=10, null=True)),
                ('option2', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], default='no', max_length=10, null=True)),
                ('feed_weight', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('from_time', models.CharField(max_length=10)),
                ('to_time', models.CharField(max_length=10)),
                ('pond_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.pond')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.task_category')),
                ('worker_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.worker_details')),
            ],
        ),
    ]
